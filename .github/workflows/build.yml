name: Build and Deploy Industry Atlas

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run scrapers daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run scrapers (if scheduled)
      if: github.event_name == 'schedule'
      run: npm run scrape
      
    - name: Build site
      run: npm run build
      
    - name: Test build output
      run: |
        if [ ! -d "_site" ]; then
          echo "Build failed: _site directory not found"
          exit 1
        fi
        
        if [ ! -f "_site/index.html" ]; then
          echo "Build failed: index.html not found"
          exit 1
        fi
        
        echo "Build successful"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: site-build
        path: _site/
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_site
        force_orphan: true

  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: site-build
        path: _site/
        
    - name: Run tests
      run: npm test
      
    - name: Check for broken links
      run: |
        # Install link checker
        npm install -g broken-link-checker
        
        # Check for broken internal links
        blc http://localhost:8080 -ro --exclude-external --exclude-invalid
      continue-on-error: true

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Check formatting
      run: npm run format:check
      
    - name: Check for dead links
      run: |
        # Install markdown link checker
        npm install -g markdown-link-check
        
        # Check all markdown files
        find src -name "*.md" -exec markdown-link-check {} \;
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for vulnerabilities
      run: |
        # Install safety check
        npm install -g @snyk/cli
        
        # Run security scan
        snyk test
      continue-on-error: true

  performance:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: site-build
        path: _site/
        
    - name: Check build size
      run: |
        # Check total build size
        BUILD_SIZE=$(du -sh _site | cut -f1)
        echo "Build size: $BUILD_SIZE"
        
        # Check individual file sizes
        find _site -type f -name "*.html" -exec du -h {} \; | sort -hr | head -10
        
    - name: Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          http://localhost:8080
          http://localhost:8080/trends/global
          http://localhost:8080/technology/readiness-levels
        uploadArtifacts: true
        temporaryPublicStorage: true 